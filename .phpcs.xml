<?xml version="1.0"?>
<ruleset name="NezdPlusz">
    <description>PHP CodeSniffer configuration for NezdPlusz project</description>

    <!-- Files and directories to check -->
    <file>.</file>
    
    <!-- Exclude specific directories and files -->
    <exclude-pattern>vendor/</exclude-pattern>
    <exclude-pattern>bin/</exclude-pattern>
    <exclude-pattern>assets/</exclude-pattern>
    <exclude-pattern>templates/</exclude-pattern>
    <exclude-pattern>*.min.js</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>composer.phar</exclude-pattern>
    <exclude-pattern>sonar-project.properties</exclude-pattern>
    <exclude-pattern>package.json</exclude-pattern>
    <exclude-pattern>composer.json</exclude-pattern>
    <exclude-pattern>composer.lock</exclude-pattern>

    <!-- Use PSR-12 coding standard as base -->
    <rule ref="PSR12">
        <!-- Allow longer line lengths for legacy code -->
        <exclude name="Generic.Files.LineLength"/>
        <!-- Allow flexible brace placement -->
        <exclude name="PSR12.Classes.OpeningBraceSpace"/>
        <exclude name="PSR2.Classes.ClassDeclaration.OpenBraceNewLine"/>
        <exclude name="PSR2.Methods.FunctionDeclaration.BraceOnSameLine"/>
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine"/>
        <!-- Suppress PHP 7.1+ constant visibility warnings for PHP 5.6 project -->
        <exclude name="PSR12.Properties.ConstantVisibility"/>
    </rule>

    <!-- Additional rules -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="150"/>
        </properties>
    </rule>

    <!-- PHP version compatibility -->
    <config name="testVersion" value="5.6-"/>

    <!-- File-specific rule exclusions -->
    <!-- Suppress global keyword warnings for entry point files -->
    <rule ref="Squiz.PHP.GlobalKeyword">
        <exclude-pattern>*/download.php</exclude-pattern>
        <exclude-pattern>*/exclusive_player.php</exclude-pattern>
        <exclude-pattern>*/figyucsak.php</exclude-pattern>
        <exclude-pattern>*/gallery.php</exclude-pattern>
        <exclude-pattern>*/player.php</exclude-pattern>
        <exclude-pattern>*/process_pages.php</exclude-pattern>
        <exclude-pattern>*/share.php</exclude-pattern>
        <exclude-pattern>*/recaptcha_check.php</exclude-pattern>
    </rule>
    
    <!-- Suppress side effects warnings for entry point files -->
    <rule ref="PSR1.Files.SideEffects">
        <exclude-pattern>*/download.php</exclude-pattern>
        <exclude-pattern>*/exclusive_player.php</exclude-pattern>
        <exclude-pattern>*/figyucsak.php</exclude-pattern>
        <exclude-pattern>*/gallery.php</exclude-pattern>
        <exclude-pattern>*/player.php</exclude-pattern>
        <exclude-pattern>*/process_pages.php</exclude-pattern>
        <exclude-pattern>*/share.php</exclude-pattern>
        <exclude-pattern>*/recaptcha_check.php</exclude-pattern>
    </rule>

    <!-- Allow legacy constant naming in AccessHelper for compatibility with legacy app -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName">
        <exclude-pattern>*/AccessHelper.php</exclude-pattern>
    </rule>

    <!-- Code quality rules -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

    <!-- Formatting rules -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>

    <!-- Squiz rules -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

    <!-- PEAR rules -->
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition">
        <exclude name="PEAR.ControlStructures.MultiLineCondition.StartWithBoolean"/>
        <exclude name="PEAR.ControlStructures.MultiLineCondition.SpacingAfterOpenBrace"/>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>

    <!-- Zend rules -->
    <rule ref="Zend.Files.ClosingTag"/>

    <!-- Custom severity levels -->
    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <severity>3</severity>
    </rule>

    <!-- Show progress -->
    <arg name="report" value="full"/>
    <arg name="colors"/>
    <arg value="p"/>

    <!-- Use cache for faster subsequent runs -->
    <arg name="cache"/>

    <!-- Run in parallel for better performance -->
    <arg name="parallel" value="8"/>
</ruleset>